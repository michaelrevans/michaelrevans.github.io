{"version":3,"sources":["webpack:///webpack/bootstrap acb15a4cce1523906bb1","webpack:///./scripts/modules/circle-animation.js","webpack:///./scripts/modules/timer-animation.js","webpack:///./scripts/modules/countdown.js","webpack:///./scripts/app.js","webpack:///./scripts/modules/complete-animation.js","webpack:///./scripts/modules/custom-time.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AChEA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;;AAEA;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,aAAa,GAAG,eAAe;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;AAID;;;;;;;;;;;;;ACjFkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;ACnCD;AACA;AACA;AACA;AACA;;;;;;;;;;ACLsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;;AAEA;;;;;;;;;;;;ACvBkC;AAClC;AACoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap acb15a4cce1523906bb1","const timerCircle = document.querySelector('.timer-circle circle');\nlet dashOffset = timerCircle.getTotalLength();\n\n// moves green fill around circle to show timer completion\nfunction animateCircle(timeLeft, interval, reset) {\n  // used once when new timer is set\n  if (reset) {\n    resetCircle();\n  }\n  // moves green fill around by the required amount\n  timerCircle.style.strokeDashoffset = dashOffset * ((timeLeft - 1) / interval);\n  if (timeLeft === 0) {\n    timerCircle.style.strokeDashoffset = 0;\n  }\n}\n\n// reset circle between countdowns\nexport function resetCircle() {\n  timerCircle.classList.add('resetting');\n  timerCircle.style.strokeDashoffset = dashOffset\n  timerCircle.classList.remove('resetting');\n}\n\n// get total circle length (used on resize event)\nfunction recalculateDashOffset() {\n  dashOffset = timerCircle.getTotalLength();\n}\n\n// debounced resize event, fires 0.2s after final resize event occurs\nfunction resize() {\n  let i;\n  window.addEventListener('resize', function() {\n    clearTimeout(i);\n    i = setTimeout(() => {\n      recalculateDashOffset();\n    }, 200);\n  });\n}\n\nresize();\n\nexport default animateCircle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/circle-animation.js\n// module id = 0\n// module chunks = 0","\nconst doc = document;\nconst timerDisplay = doc.querySelector('.timer-display');\nconst endTimeSpan = doc.querySelector('.end-time span');\nconst hourSwitchButton = Array.from(doc.getElementsByClassName('hour-switch'));\nconst hoursDisplay = doc.querySelector('.hours-display');\nconst hoursValue = doc.querySelector('.hours-value');\nconst hoursPlural = doc.querySelector('.hours-plural');\nconst minutesDisplay = doc.querySelector('.minutes-display');\nconst minutesValue = doc.querySelector('.minutes-value');\nconst minutesPlural = doc.querySelector('.minutes-plural');\nconst secondsDisplay = doc.querySelector('.seconds-display');\nconst secondsValue = doc.querySelector('.seconds-value');\nconst secondsPlural = doc.querySelector('.seconds-plural');\n\n// performs calculation on remaining seconds to display as HH:MM:SS (or MM:SS)\nfunction animateTime(timeLeft) {\n  let minutes;\n  const seconds = timeLeft % 60;\n  const hoursOut = hoursDisplay.classList.contains('out');\n  if (hoursOut) {\n    minutes = (timeLeft - seconds) / 60;\n  } else {\n    minutes = ((timeLeft % 3600) - seconds) / 60;\n  }\n  const hours = (timeLeft - ((minutes * 60) + seconds)) / 3600;\n  if (parseInt(hoursValue.innerHTML) != hours) hoursValue.innerHTML = hours;\n  if (parseInt(minutesValue.innerHTML) != minutes) minutesValue.innerHTML = minutes;\n  secondsValue.innerHTML = seconds;\n  pluralise(hoursValue, hoursPlural);\n  pluralise(minutesValue, minutesPlural);\n  pluralise(secondsValue, secondsPlural);\n}\n\n// function that simply removes s from hour, minute, second when number above is 1\nfunction pluralise(value, plural) {\n  if (parseInt(value.innerHTML) === 1) {\n    plural.style.display = 'none';\n  } else {\n    plural.style.display = '';\n  }\n}\n\n// takes interval and displays end time in HH:MM above circle\nexport function setEndTime(interval) {\n  const startTime = ((new Date()).getTime() / 1000);\n  const endTime = new Date((startTime + parseInt(interval)) * 1000);\n  const endTimeHours = ('0' + endTime.getHours()).slice(-2);\n  const endTimeMinutes = ('0' + endTime.getMinutes()).slice(-2);\n  endTimeSpan.innerHTML = `${endTimeHours}:${endTimeMinutes}`;\n}\n\n// switch to turn hours on and off (for custom timer only)\nfunction hoursOutSwitch(turningOff) {\n  const minsVal = parseInt(minutesValue.innerHTML);\n  const hoursVal = parseInt(hoursValue.innerHTML);\n  if (turningOff) {\n    const newMins = (hoursVal * 60) + minsVal;\n    minutesValue.innerHTML = newMins;\n  } else {\n    const newHours = Math.floor(minsVal / 60);\n    const newMins = minsVal - (newHours * 60);\n    minutesValue.innerHTML = newMins;\n    hoursValue.innerHTML = newHours;\n  }\n}\n\n// click handler for switch\nhourSwitchButton.forEach((button, index, arr) => {\n  button.addEventListener('click', function() {\n    const isOut = hoursDisplay.classList.contains('out');\n    hoursDisplay.classList.toggle('out');\n    hoursOutSwitch(!isOut);\n    pluralise(hoursValue, hoursPlural);\n    pluralise(minutesValue, minutesPlural);\n    arr.forEach(button => button.classList.toggle('active'));\n  });\n});\n\n\n\nexport default animateTime;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/timer-animation.js\n// module id = 1\n// module chunks = 0","import animateTime, { setEndTime } from './timer-animation';\nimport animateCircle from './circle-animation';\nimport completeAnimation from './complete-animation';\n\nconst doc = document;\nconst presetTimeButtons = Array.from(doc.getElementsByClassName('preset-time'));\nconst customTimeButton = doc.querySelector('.custom-time');\nconst startOverlay = doc.querySelector('.start-overlay');\nconst countdownStore = doc.querySelector('.timer-circle');\n\nlet counting;\n\n// performs decrementing interval, delegates functions to animate timer and circle\n export function countdown(interval, animateTime, animateCircle) {\n  let timeLeft = interval;\n  animateCircle(timeLeft, interval, true);\n  counting = setInterval(function() {\n    timeLeft--;\n    animateCircle(timeLeft, interval, false);\n    animateTime(timeLeft);\n    if (timeLeft <= 0) {\n      completeAnimation();\n      clearInterval(counting);\n    }\n  }, 1000);\n}\n\n// starts countdown for preset buttons\npresetTimeButtons.forEach((button, index) => {\n  button.addEventListener('click', function() {\n    const newInterval = this.getAttribute('data-interval');\n    startOverlay.classList.add('closed');\n    animateTime(newInterval);\n    setEndTime(newInterval);\n    setTimeout(() => countdown(newInterval, animateTime, animateCircle), 1000);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/countdown.js\n// module id = 2\n// module chunks = 0","\nrequire('./modules/countdown');\nrequire('./modules/timer-animation');\nrequire('./modules/circle-animation');\nrequire('./modules/complete-animation');\nrequire('./modules/custom-time');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/app.js\n// module id = 3\n// module chunks = 0","import { resetCircle } from './circle-animation';\n\nconst doc = document;\nconst startOverlay = doc.querySelector('.start-overlay');\nconst displayScreen = doc.querySelector('.display-screen');\nconst newTimerButton = doc.querySelector('.new-timer');\nconst closeAppButton = doc.querySelector('.close-app');\n\n// when timer is finished, prepare screen for options\nfunction completeAnimation() {\n  displayScreen.classList.add('done');\n}\n\n// when new tmer button is clicked, load original elements back to display screen\nnewTimerButton.addEventListener('click', function() {\n  startOverlay.classList.remove('closed');\n  displayScreen.classList.remove('done');\n  resetCircle();\n});\n\n\ncloseAppButton.addEventListener('click', () => window.close());\n\nexport default completeAnimation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/complete-animation.js\n// module id = 4\n// module chunks = 0","import animateTime, { setEndTime } from './timer-animation';\nimport animateCircle from './circle-animation';\nimport { countdown } from './countdown';\n\nconst doc = document;\nconst body = doc.body;\nconst customTimeButton = doc.querySelector('.custom-time');\nconst customTimeInput = doc.querySelector('.custom-time input');\nconst customTimeSubmit = doc.querySelector('.custom-time button');\nconst startOverlay = doc.querySelector('.start-overlay');\nconst errorMessage = doc.querySelector('.error-message');\nconst timeModeSwitch = doc.querySelector('.timemode-switch');\nconst hoursDisplay = doc.querySelector('.hours-display');\n\n// replaces button with input and focusses it\ncustomTimeButton.addEventListener('click', function(event) {\n  event.stopPropagation();\n  customTimeInput.classList.add('fore');\n  customTimeInput.focus();\n});\n\n// reveal button and hide input again on body click\nbody.addEventListener('click', function() {\n  customTimeInput.classList.remove('fore');\n});\n\n// takes input value to start countdown\nfunction startCustomCountdown() {\n  const inputValue = customTimeInput.value\n  const message = validateInput(inputValue);\n  if (message === '') {\n    const newInterval = inputValue * 60;\n    startOverlay.classList.add('closed');\n    showHoursOrNot(newInterval);\n    animateTime(newInterval);\n    setEndTime(newInterval);\n    setTimeout(() => countdown(newInterval, animateTime, animateCircle), 1000);\n  }\n  errorMessage.textContent = message;\n}\n\ncustomTimeSubmit.addEventListener('click', function() {\n  startCustomCountdown();\n});\n\n// start countdown on enter press\ncustomTimeInput.addEventListener('keypress', function(event) {\n  if (event.which === 13) {\n    startCustomCountdown();\n  }\n});\n\n// if error message is showing, check changed input to remove if input is valid\nfunction revalidateOnChange() {\n  const message = validateInput(customTimeInput.value);\n  if (message === '' && errorMessage.textContent !== '') {\n    errorMessage.textContent = '';\n  }\n}\n\ncustomTimeInput.addEventListener('change', revalidateOnChange);\ncustomTimeInput.addEventListener('keyup', revalidateOnChange);\n\n// validates user input so that it's between 1 and 1440\nfunction validateInput(inputValue) {\n  let message;\n  if (inputValue < 1) {\n    message = 'Minutes must be a positive integer';\n  } else if (inputValue > 1440) {\n    message = 'Time cannot excede a day';\n  } else {\n    message = '';\n  }\n  return message;\n}\n\n// shows hours switch if input is greater than 60 minutes\nfunction showHoursOrNot(interval) {\n  if (interval > 3600) {\n    timeModeSwitch.classList.remove('hidden');\n    hoursDisplay.classList.remove('out');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/custom-time.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}